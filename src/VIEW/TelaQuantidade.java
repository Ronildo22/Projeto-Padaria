/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VIEW;

import DAO.PedidoDAO;
import DTO.PedidoDTO;
import javax.swing.JOptionPane;

/**
 *
 * @author MathM
 */
public class TelaQuantidade extends javax.swing.JFrame {

    /**
     * Creates new form TelaQuantidade
     */
    public TelaQuantidade() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(255,145,77));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtfQuantidade = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnFinalizarEscolha = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cmbProduto = new javax.swing.JComboBox<>();
        txtfPreco = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();
        cmbTipoPedido = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setText("Preço");

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel2.setText("Tipo de Pedido");

        txtfQuantidade.setBackground(new java.awt.Color(255, 255, 253));
        txtfQuantidade.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        txtfQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfQuantidadeActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 48)); // NOI18N
        jLabel4.setText("SELECIONE A QUANTIDADE QUE DESEJA PEDIR");

        btnFinalizarEscolha.setBackground(new java.awt.Color(255, 255, 253));
        btnFinalizarEscolha.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        btnFinalizarEscolha.setText("Fazer Escolha");
        btnFinalizarEscolha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarEscolhaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel5.setText("Produto");

        cmbProduto.setBackground(new java.awt.Color(255, 255, 253));
        cmbProduto.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        cmbProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pão Francês", "Baguete", "Broa de Milho", "Brioche", "Pão de Leite", "Pão Italiano", "Hamburguer", "Coxinha", "Joelho/Italiano", "Beirute", "Misto Quente", "Sanduíche Natural", "Sanduíche Mortadela", "Torta Salgada", "Mussarela", "Presunto", "Queijo Prato", "Mortadela", "Peito de Peru", "Lombo", "Samale", "Torta de Limão", "Torta de Morango", "Sonho", "Bolo de Brigadeiro", "Bolo de Cenoura", "Bomba de Chocolate", "Coca-Cola Lata SEM GELO", "Coca-Cola Lata GELADA", "Coca-Cola Garrafa SEM GELO", "Coca-Cola Garrafa GELADA", "Água Mineral SEM GELO", "Água Mineral GELADA", "Água Com Gás SEM GELO", "Água Com Gás GELADA", "Cerveja Brahma Lata SEM GELO", "Cerveja Brahma Lata GELADA", "Cerveja Brahma Garrafa SEM GELO", "Cerveja Brahma Garrafa GELADA", "Suco de Laranja com Água SEM GELO", "Suco de Laranja com Água GELADO", "Suco de Laranja com Leite SEM GELO", "Suco de Laranja com Leite GELADO", "Café Simples", "Cappuccino", "Drink Vodka com Limão SEM GELO", "Drink Vodka com Limão GELADO" }));
        cmbProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProdutoActionPerformed(evt);
            }
        });

        txtfPreco.setEditable(false);
        txtfPreco.setBackground(new java.awt.Color(255, 255, 253));
        txtfPreco.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        txtfPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfPrecoActionPerformed(evt);
            }
        });

        btnCalcular.setBackground(new java.awt.Color(255, 255, 253));
        btnCalcular.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        btnCalcular.setText("Fazer Calculo");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        cmbTipoPedido.setBackground(new java.awt.Color(255, 255, 253));
        cmbTipoPedido.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        cmbTipoPedido.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Comer Agora!", "Levar Para a Viagem!" }));

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel6.setText("Quantidade");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 97, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5)
                                .addComponent(cmbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtfQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                                .addComponent(cmbTipoPedido, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)))
                        .addGap(237, 237, 237))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFinalizarEscolha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtfPreco, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                                .addComponent(jLabel1)))
                        .addGap(22, 22, 22)))
                .addGap(212, 212, 212))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbTipoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btnFinalizarEscolha, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    double valor = 0;
    private void cmbProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProdutoActionPerformed

        String produto = cmbProduto.getSelectedItem().toString();
        
        // ---- Paes ----
        if("Pão Francês".equals(produto)){

            JOptionPane.showMessageDialog(null, "Este produto é vendido por peso, então não tem um valor fixo aqui no Toten!\n"
                    + "Ele var ser pesado, e o valor trago a você, será com base na quantidade que você escolher!");
                   valor = 00.00; 
        }
        else if ("Baguete".equals(produto)){
    
            valor = 24.00;    
    }
        else if ("Broa de Milho".equals(produto)){
                
            valor = 1.00;   
        }
        else if ("Brioche".equals(produto)){
            valor = 13.75;   
        }
        else if ("Pão de Leite".equals(produto)){
            valor = 5.67;
        }
        else if ("Pão Italiano".equals(produto)){
            valor = 10.00;
        }
          
        
        // ---- Lanches ----
        else if("Hamburguer".equals(produto)){
            valor = 28.00;
        }
        else if("Coxinha".equals(produto)){
            valor = 5.50;
        }
        else if("Joelho/Italiano".equals(produto)){
            valor = 2.40;
        }
        else if("Beirute".equals(produto)){
            valor = 25.00;
        }
        else if("Misto Quente".equals(produto)){
            valor = 2.15;
        }
        else if("Sanduíche Natural".equals(produto)){
            valor = 5.00;
        }
        else if("Sanduíche Mortadela".equals(produto)){
            valor = 1.50;
        }
        else if("Torta Salgada".equals(produto)){
            valor = 04.70;
        }
        // ---- Frios ----
        else if("Mussarela".equals(produto)){
            
            JOptionPane.showMessageDialog(null, "Este produto é vendido por peso, então não tem um valor fixo aqui no Toten!\n"
                    + "Ele var ser pesado, e o valor trago a você, será com base na quantidade que você escolher!");
        valor = 00.00; 
        }
        else if("Presunto".equals(produto)){
             
            JOptionPane.showMessageDialog(null, "Este produto é vendido por peso, então não tem um valor fixo aqui no Toten!\n"
                    + "Ele var ser pesado, e o valor trago a você, será com base na quantidade que você escolher!");
            valor = 00.00; 
        }
        else if("Queijo Prato".equals(produto)){
            JOptionPane.showMessageDialog(null, "Este produto é vendido por peso, então não tem um valor fixo aqui no Toten!\n"
                    + "Ele var ser pesado, e o valor trago a você, será com base na quantidade que você escolher!");
       valor = 00.00; 
        }
        else if("Mortadela".equals(produto)){
            JOptionPane.showMessageDialog(null, "Este produto é vendido por peso, então não tem um valor fixo aqui no Toten!\n"
                    + "Ele var ser pesado, e o valor trago a você, será com base na quantidade que você escolher!");
        valor = 00.00; 
        }
        else if("Peito de Peru".equals(produto)){
            JOptionPane.showMessageDialog(null, "Este produto é vendido por peso, então não tem um valor fixo aqui no Toten!\n"
                    + "Ele var ser pesado, e o valor trago a você, será com base na quantidade que você escolher!");
        valor = 00.00; 
        }
        else if("Lombo".equals(produto)){
           JOptionPane.showMessageDialog(null, "Este produto é vendido por peso, então não tem um valor fixo aqui no Toten!\n"
                    + "Ele var ser pesado, e o valor trago a você, será com base na quantidade que você escolher!");
        valor = 00.00; 
        }
        else if("Salame".equals(produto)){
            JOptionPane.showMessageDialog(null, "Este produto é vendido por peso, então não tem um valor fixo aqui no Toten!\n"
                    + "Ele var ser pesado, e o valor trago a você, será com base na quantidade que você escolher!");
        valor = 00.00; 
        }
        
        // ---- Doces ----
        else if("Torta de Limão".equals(produto)){
            valor = 06.70;
        }
        else if("Torta de Morango".equals(produto)){
            valor = 06.70;
        }
        else if("Sonho".equals(produto)){
            valor = 03.00;
        }
        else if("Bolo de Brigadeiro".equals(produto)){
            valor = 06.70;
        }
        else if("Bolo de Cenoura".equals(produto)){
            valor = 05.70;
        }
        else if("Bomba de Chocolate".equals(produto)){
            valor = 03.70;
        }
        
        // ---- SUCOS -----
        
         else if ("Coca-Cola Lata SEM GELO".equals(produto)){
            valor = 03.00;
        }
           
        else if ("Coca-Cola Lata GELADA".equals(produto)){
            valor = 03.00;
        }
        else if ("Coca-Cola Garrafa SEM GELO".equals(produto)){
            valor = 06.80;
        }
        else if ("Coca-Cola Garrafa GELADA".equals(produto)){
            valor = 06.80;
        }
        else if ("Água Mineral SEM GELO".equals(produto)){
            valor = 02.0;
        }
        else if ("Água Mineral GELADA".equals(produto)){
            valor = 02.0;
        }
        else if ("Água Com Gás SEM GELO".equals(produto)){
            valor = 03.50;
        }
        else if ("Água Com Gás GELADA".equals(produto)){
            valor = 03.50;
        }
        else if ("Cerveja Brahma Lata SEM GELO".equals(produto)){
            valor = 03.00;
        }
        
        else if ("Cerveja Brahma Lata GELADA".equals(produto)){
            valor = 03.00;
        }
        else if ("Cerveja Brahma Garrafa SEM GELO".equals(produto)){
            valor = 06.80;
        }
        
        else if ("Cerveja Brahma Garrafa GELADA".equals(produto)){
            valor = 06.80;
        }
        else if ("Suco de Laranja com Água SEM GELO".equals(produto)){
            valor = 06.00;
        }
        else if ("Suco de Laranja com Água GELADO".equals(produto)){
            valor = 06.00;
        }
        else if ("Suco de Laranja com Leite SEM GELO".equals(produto)){
            valor = 08.00;
        }
        else if ("Suco de Laranja com Leite GELADO".equals(produto)){
            valor = 08.00;
        }
        else if ("Café Simples".equals(produto)){
            valor = 04.00;
        }
        else if ("Cappuccino".equals(produto)){
            valor = 07.50;
        }
        else if ("Drink Vodka com Limão SEM GELO".equals(produto)){
            valor = 15.90;
        }
        else if ("Drink Vodka com Limão GELADO".equals(produto)){
            valor = 15.90;
        }
        JOptionPane.showMessageDialog(null, "Preço: "+ valor);
     

    }//GEN-LAST:event_cmbProdutoActionPerformed

    private void btnFinalizarEscolhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarEscolhaActionPerformed
        String produto;
        String quantidade;
        String tipoPedido;
        String preco;
        
        
       produto = cmbProduto.getSelectedItem().toString();
       quantidade = txtfQuantidade.getText();
       tipoPedido = cmbTipoPedido.getSelectedItem().toString();
       preco = txtfPreco.getText();
       
         int quantidadee = Integer.parseInt(quantidade);
         double precoo = Double.parseDouble (preco);
       
       PedidoDTO objPedidoDTO = new PedidoDTO();
       objPedidoDTO.setProduto_pedido(produto);
       objPedidoDTO.setValor(valor);
       objPedidoDTO.setQuantidade_pedido(quantidadee);
       objPedidoDTO.setTipoPedido_pedido(tipoPedido);
       objPedidoDTO.setPreco_pedido(precoo);
       
       PedidoDAO objPedidoDAO = new PedidoDAO();
       objPedidoDAO.fazerPedido(objPedidoDTO);
       
       JOptionPane.showMessageDialog(null, "Pedido Feito!");
       
       
    }//GEN-LAST:event_btnFinalizarEscolhaActionPerformed
            String quantidade;
            int number;
    private void txtfQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfQuantidadeActionPerformed
       
    }//GEN-LAST:event_txtfQuantidadeActionPerformed

            double resultado= 0;
            
    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
       // txtfPreco.setText("");
        quantidade = txtfQuantidade.getText();
        number = Integer.parseInt(quantidade);
        resultado = (double) (valor * number);
        String resultadoFinal = Double.toString(resultado);
        txtfPreco.setText(resultadoFinal);
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void txtfPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfPrecoActionPerformed
       
    }//GEN-LAST:event_txtfPrecoActionPerformed

        
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaQuantidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaQuantidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaQuantidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaQuantidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaQuantidade().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnFinalizarEscolha;
    private javax.swing.JComboBox<String> cmbProduto;
    private javax.swing.JComboBox<String> cmbTipoPedido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtfPreco;
    private javax.swing.JTextField txtfQuantidade;
    // End of variables declaration//GEN-END:variables
}
